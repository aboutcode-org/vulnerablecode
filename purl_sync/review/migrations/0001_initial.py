# Generated by Django 4.2.2 on 2023-09-02 14:05

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The object's unique global identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("acct", models.CharField(max_length=100)),
                ("content", models.TextField(max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "note_type",
                    models.SmallIntegerField(choices=[(0, "Post"), (1, "Review")], default=0),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="review.note",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="favicon-16x16.png",
                        help_text="the profile image",
                        upload_to="uploads/",
                    ),
                ),
                ("summary", models.CharField(help_text="the profile description", max_length=100)),
                ("public_key", models.TextField()),
                ("local", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RemotePerson",
            fields=[
                ("url", models.URLField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=100)),
                ("profile_data", models.JSONField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RemoteService",
            fields=[
                ("url", models.URLField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=100)),
                ("profile_data", models.JSONField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The object's unique global identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("url", models.URLField()),
                ("path", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Reputation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("voter", models.CharField(help_text="security@vcio.com", max_length=100)),
                ("acceptor", models.CharField(help_text="security@nexb.com", max_length=100)),
                ("positive", models.BooleanField(default=True)),
            ],
            options={
                "unique_together": {("voter", "acceptor", "positive")},
            },
        ),
        migrations.CreateModel(
            name="Vulnerability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The object's unique global identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("commit_id", models.CharField(max_length=50)),
                (
                    "repo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="review.repository"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "remote_actor",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.remoteservice",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The object's unique global identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("headline", models.CharField(max_length=300)),
                ("data", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "Open"), (1, "Draft"), (2, "Closed"), (3, "Merged")], default=0
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="review.person"
                    ),
                ),
                ("notes", models.ManyToManyField(blank=True, to="review.note")),
                ("reputation", models.ManyToManyField(blank=True, to="review.reputation")),
                (
                    "vulnerability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="review.vulnerability"
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.AddField(
            model_name="repository",
            name="admin",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="review.service"
            ),
        ),
        migrations.CreateModel(
            name="Purl",
            fields=[
                (
                    "avatar",
                    models.ImageField(
                        default="favicon-16x16.png",
                        help_text="the profile image",
                        upload_to="uploads/",
                    ),
                ),
                ("summary", models.CharField(help_text="the profile description", max_length=100)),
                ("public_key", models.TextField()),
                ("local", models.BooleanField(default=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The object's unique global identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "string",
                    models.CharField(
                        help_text="PURL (no version) ex: @pkg:maven/org.apache.logging",
                        max_length=300,
                        unique=True,
                    ),
                ),
                ("notes", models.ManyToManyField(blank=True, to="review.note")),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="review.service"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="person",
            name="remote_actor",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="review.remoteperson",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="user",
            field=models.OneToOneField(
                null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="note",
            name="reputation",
            field=models.ManyToManyField(blank=True, to="review.reputation"),
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="review.person"
                    ),
                ),
                (
                    "purl",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="review.purl"
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="repository",
            unique_together={("admin", "name")},
        ),
    ]
