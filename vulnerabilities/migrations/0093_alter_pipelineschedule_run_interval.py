# Generated by Django 4.2.22 on 2025-06-24 16:33

import django.core.validators
from django.db import migrations, models
from datetime import datetime
from datetime import timezone

from aboutcode.pipeline import LoopProgress

class Migration(migrations.Migration):
    def update_old_interval(apps, schema_editor):
        Pipeline = apps.get_model("vulnerabilities", "PipelineSchedule")
        pipeline_schedule = Pipeline.objects.all()

        log(f"\nUpdating interval for {pipeline_schedule.count():,d} pipeline")
        progress = LoopProgress(
            total_iterations=pipeline_schedule.count(),
            progress_step=10,
            logger=log,
        )
        for pipeline in progress.iter(pipeline_schedule.iterator()):
            pipeline.run_interval = pipeline.run_interval * 24
            pipeline.save()
    
    def reverse_update_old_interval(apps, schema_editor):
        Pipeline = apps.get_model("vulnerabilities", "PipelineSchedule")
        pipeline_schedule = Pipeline.objects.all()

        log(f"\nReverse interval for {pipeline_schedule.count():,d} pipeline")
        progress = LoopProgress(
            total_iterations=pipeline_schedule.count(),
            progress_step=10,
            logger=log,
        )
        for pipeline in progress.iter(pipeline_schedule.iterator()):
            pipeline.run_interval = pipeline.run_interval / 24
            pipeline.save()

    dependencies = [
        ("vulnerabilities", "0092_pipelineschedule_pipelinerun"),
    ]

    operations = [
        migrations.AlterField(
            model_name="pipelineschedule",
            name="run_interval",
            field=models.PositiveSmallIntegerField(
                default=24,
                help_text="Number of hours to wait between run of this pipeline.",
                validators=[
                    django.core.validators.MinValueValidator(
                        1, message="Interval must be at least 1 hour."
                    ),
                    django.core.validators.MaxValueValidator(
                        8760, message="Interval must be at most 8760 hours."
                    ),
                ],
            ),
        ),
        migrations.RunPython(
            code=update_old_interval,
            reverse_code=reverse_update_old_interval,
        ),
    ]


def log(message):
    now_local = datetime.now(timezone.utc).astimezone()
    timestamp = now_local.strftime("%Y-%m-%d %H:%M:%S.%f")[:-3]
    message = f"{timestamp} {message}"
    print(message)