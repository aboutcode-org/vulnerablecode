import logging

from sphinx.util import requests

from vulnerabilities.models import Alias
from vulnerabilities.models import Exploit
from vulnerabilities.pipelines import VulnerableCodePipeline

module_logger = logging.getLogger(__name__)


class VulnerabilityKevPipeline(VulnerableCodePipeline):
    """
    Known Exploited Vulnerabilities Pipeline: Retrieve KEV data, iterate through it to identify vulnerabilities
    by their associated aliases, and create or update the corresponding Exploit instances.
    """

    kev_data = {}

    @classmethod
    def steps(cls):
        return (
            cls.fetch_exploits,
            cls.add_exploits,
        )

    def fetch_exploits(self):
        kev_url = (
            "https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json"
        )
        response = requests.get(kev_url)
        if response.status_code != 200:
            self.log(
                f"Failed to fetch the CISA Catalog of Known Exploited Vulnerabilities: {kev_url}"
            )
            return
        self.kev_data = response.json()

    def add_exploits(self):
        for kev_vul in self.kev_data.get("vulnerabilities", []):
            cve_id = kev_vul.get("cveID")

            if not cve_id:
                continue

            alias = Alias.objects.get_or_none(alias=cve_id)

            if not alias:
                continue

            vul = alias.vulnerability

            if not vul:
                continue

            Exploit.objects.update_or_create(
                vulnerability=vul,
                data_source="KEV",
                defaults={
                    "description": kev_vul["shortDescription"],
                    "date_added": kev_vul["dateAdded"],
                    "required_action": kev_vul["requiredAction"],
                    "due_date": kev_vul["dueDate"],
                    "notes": kev_vul["notes"],
                    "known_ransomware_campaign_use": True
                    if kev_vul["knownRansomwareCampaignUse"] == "Known"
                    else False,
                },
            )
